@model bie.evgestao.ui.viewmodels.CelulaViewmodel
@using bie.evgestao.ui.mvc.Helpers
@using bie.evgestao.ui.viewmodels
@{
    ViewBag.Title = "Adicionar Célula";
    ViewBag.HeaderText = ViewBag.Title;

    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("criar", "celulas", FormMethod.Post, new { @id = "frmMain", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()




    <div class="col-md-12">
        <div class="panel panel-default">

            <div class="form-horizontal frmlimitado" style="max-width:800px">
                <div class="panel-heading">
                    <h3>Dados da célula</h3>
                </div>
                <div class="panel-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoCelula, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EnumDropDownListWDescriptionFor(model => model.TipoCelula, new { @class = "form-control" })

                        </div>
                    </div>


                    <div class="form-group">

                        @Html.LabelFor(model => model.Coordenador, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <div class="input-group">
                                @Html.DropDownListFor(model => model.id_coordenador,
                           new SelectList(ViewBag.PessoasDisponiveis, "id_pessoa", "Nome"), "Selecione uma pessoa", new { @class = "chosen-select form-control" })

                                <span class="input-group-addon bg-black">
                                    <i class="glyph-icon icon-user"></i>
                                </span>
                                @Html.ValidationMessageFor(model => model.id_coordenador, "", new { @class = "text-danger" })
                            </div><!-- input group-->

                        </div><!-- col-md-4-->



                        @Html.LabelFor(model => model.Supervisor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <div class="input-group">
                                @Html.DropDownListFor(model => model.id_supervisor,
                           new SelectList(ViewBag.PessoasDisponiveis, "id_pessoa", "Nome"), "Selecione uma pessoa", new { @class = "chosen-select form-control" })


                                <span class="input-group-addon bg-black">
                                    <i class="glyph-icon icon-user"></i>
                                </span>
                                @Html.ValidationMessageFor(model => model.id_supervisor, "", new { @class = "text-danger" })

                            </div><!-- input group-->
                        </div><!-- col-md-4-->


                    </div> <!-- Form group responsáveis -->




                </div>


                <div class="panel-heading">
                    <h3>Endereço</h3>
                </div>
                <div class="panel-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EnumDropDownListWDescriptionFor(model => model.UF, new { @class = "form-control pequeno" })
                            @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Pais, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div><!-- painel body endereços-->



                <div class="panel-heading">
                    <h3>Reunião</h3>
                </div>
                <div class="panel-body">


                    <div class="form-group">
                        @Html.LabelFor(model => model.DiaReuniao, htmlAttributes: new { @class = "control-label col-md-2" })



                        <div class="col-md-10">

                            @foreach (var item in bie.evgestao.ui.mvc.Helpers.EnumToDropDownListExtensions.GetItensFromEnum((new CelulaViewmodel()).DiaReuniao))
                            {

                                <label class="radio-inline">
                                    <input type="radio" id="" name="example-radio1" value="@item.Key"> @item.Value
                                </label>

                            }

                        </div>
                    </div>





                </div>






                <div class="panel-heading">
                </div>

                <div class="panel-body">
                    <div style="overflow:auto">
                        <div class="col-md-10 col-md-offset-2  btn-container" style="">
                            <button type="submit" class="btn btn-space btn-primary">Salvar</button>
                            <a href="@Url.Action("Index")" class="btn btn-space btn-default">Cancelar</a>
                        </div>

                    </div>




                </div>
            </div>
        </div>
    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/datetimepicker/jquery.datetimepicker.full.min.js"></script>
    <link href="~/Scripts/datetimepicker/jquery.datetimepicker.min.css" rel="stylesheet" />

    <link href="~/Content/3rdParty/Template/widgets/chosen/chosen.css" rel="stylesheet" />
    <script src="~/Content/3rdParty/Template/widgets/chosen/chosen.js"></script>

    <style type="text/css">
        .chosen-single div:last-of-type {
            display: none;
        }
    </style>

    <script>

        var urlBase = '@Url.Content("~/Pessoas/")';


        $(document).ready(function () {

            $("#Cep").blur(function () {

                var strCep = $("#Cep").val();

                strCep = strCep.replace(/^\D+/g, '');
                if (strCep == "") return;


                $.getJSON("/home/cep/" + strCep, function (data) {


                    $("#Endereco").val(data.logradouro);
                    $("#Bairro").val(data.bairro);
                    $("#Cidade").val(data.localidade);
                    $("#UF option:contains('" + data.uf + "')").attr("selected", "selected")

                    $("#Pais").val("Brasil");
                    if (data.logradouro != "") {
                        $("#Numero").focus();
                    }

                }).fail(function () {


                });



            });


            $(".dtp").each(function (idx, obj) {
                $(obj).val($(obj).val().substring(0, 10));
            });

            $(".dtp").datetimepicker({
                format: 'd/m/Y',
                //format: 'd/m/Y',
                lang: 'pt-BR',
                closeOnDateSelect: true

            });
            $.datetimepicker.setLocale('pt-BR');

            //habilita o buscador de pessoas (chosen)
            $(".chosen-select").chosen({ disable_search_threshold: 10 });





        })







    </script>

}
