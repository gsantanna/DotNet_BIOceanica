@model bie.evgestao.ui.mvc.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Gerar nova senha";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}


<script src='https://www.google.com/recaptcha/api.js'></script>



<div id="login-validation" class="col-md-5 col-sm-5 col-xs-11 center-margin">

    <h3 class="text-center pad25B font-gray font-size-23">
        Oceânica - Sistema de membros
    </h3>

    @using (Html.BeginForm("ResetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Code)

        

        @Html.AntiForgeryToken()

        <div id="login-form" class="content-box">
            <div class="content-box-wrapper pad20A">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label for="exampleInputEmail1">Endereço de e-mail:</label>
                    <div class="input-group input-group-lg">
                        <span class="input-group-addon addon-inside bg-white font-primary">
                            <i class="glyph-icon icon-envelope-o"></i>
                        </span>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "e-mail" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label for="exampleInputPassword1">Senha:</label>
                    <div class="input-group input-group-lg">
                        <span class="input-group-addon addon-inside bg-white font-primary">
                            <i class="glyph-icon icon-unlock-alt"></i>
                        </span>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Senha" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label for="exampleInputPassword1">Confirmar senha:</label>
                    <div class="input-group input-group-lg">
                        <span class="input-group-addon addon-inside bg-white font-primary">
                            <i class="glyph-icon icon-unlock-alt"></i>
                        </span>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirmar nova senha" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>



            <div class="button-pane">
                <button type="submit" class="btn btn-block btn-blue-alt">
                    Login
                </button>



            </div>
        </div>


    }
</div>


@*<div class="login-container">
    <div class="panel panel-default">
        <div class="panel-heading">
            <img src="~/Content/imagens/logo-focus-white-simple.png" alt="logo" class="logo-img">
            <span>Utilize seu e-mail e senha para se logar no sistema</span>
        </div>
        <div class="panel-body">

            @using (Html.BeginForm("ResetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Code)



                <div class="login-form">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })





                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon s7-user"></i></span>

                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "e-mail" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })


                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon s7-lock"></i></span>

                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Nova Senha" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })


                        </div>
                    </div>


                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon s7-lock"></i></span>

                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirmar Nova Senha" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })


                        </div>
                    </div>





                    <div class="form-group login-submit">
                        <button data-dismiss="modal" type="submit" class="btn btn-primary btn-lg">Login</button>
                    </div>

                </div>

            }



        </div>
    </div>
</div>*@






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



    <script type="text/javascript">
        function solicitar() {
            document.getElementById("frmMain").submit();

        }



    </script>

}




